trigger:
- master

jobs:
  - job: Linux
    pool: Hosted Ubuntu 1604

    steps:
    - task: ShellScript@2
      inputs:
        scriptPath: 'setup.sh'
        args: '--all'
      displayName: 'Initialise toolchain'
    - script: |
        export PATH="libraries/moos-ivp/bin:$PATH"
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:libraries/MATLAB/v95/sys/os/glnxa64:libraries/MATLAB/v95/bin/glnxa64:libraries/MATLAB/v95/runtime/glnxa64
        source ~/.bashrc
        echo $PATH
        cd libraries/moos-ivp/bin
        IVP="$(pwd)"
        cd ../../..
        echo 'moosivp='"$IVP"'' >undersea-agent/resources/moos.properties
        cd libraries/MATLAB/v95/bin/glnxa64
        find -L . -name . -o -type d -prune -o -type l -exec rm {} +
      displayName: 'Setup environment parameters'
    - task: Gradle@2
      inputs:
        gradleWrapperFile: 'undersea-agent/gradlew'
        workingDirectory: 'undersea-agent'
        tasks: 'clean build test --info'
        javaHomeOption: 'JDKVersion'
        codeCoverageToolOption: 'None'
      displayName: 'Gradle build and test'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'
        searchFolder: 'undersea-agent'
        mergeTestResults: true
        testRunTitle: 'Ubuntu 16.04 Tests'
      displayName: "Publish test results"

  - job: Mac
    pool: Hosted macOS

    steps:
    - task: ShellScript@2
      inputs:
        scriptPath: 'setup.sh'
        args: '--all'
      displayName: 'Initialise toolchain'
    - script: |
        export PATH="/libraries/moos-ivp/bin:$PATH"
        export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:libraries/MATLAB/v95/sys/os/maci64:libraries/MATLAB/v95/bin/maci64:libraries/MATLAB/v95/runtime/maci64
        echo $PATH
        cd libraries/moos-ivp/bin
        IVP="$(pwd)"
        cd ../../..
        echo 'moosivp='"$IVP"'' >undersea-agent/resources/moos.properties
        cd libraries/MATLAB/v95/bin/maci64
        find -L . -name . -o -type d -prune -o -type l -exec rm {} +
      displayName: 'Setup environment parameters'
    - task: Gradle@2
      inputs:
        gradleWrapperFile: 'undersea-agent/gradlew'
        workingDirectory: 'undersea-agent'
        tasks: 'clean build test --info'
        javaHomeOption: 'JDKVersion'
        codeCoverageToolOption: 'None'
      displayName: 'Gradle build and test'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'
        searchFolder: 'undersea-agent'
        mergeTestResults: true
        testRunTitle: 'OSX Tests'
      displayName: "Publish test results"