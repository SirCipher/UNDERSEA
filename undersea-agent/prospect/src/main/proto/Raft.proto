syntax = "proto3";
option java_package = "com.type2labs.undersea.prospect";
option java_outer_classname = "RaftProtos";
option java_generate_equals_and_hash = true;
package proto;
import "google/protobuf/any.proto";

service RaftProtocolService {
    rpc GetStatus (AcquireStatusRequest) returns (AcquireStatusResponse) {
    }

    rpc AppendEntry (AppendEntryRequest) returns (AppendEntryResponse) {

    }

    rpc RequestVote (VoteRequest) returns (VoteResponse) {

    }

    rpc DistributeMission (DistributeMissionRequest) returns (DisributeMissionResponse) {

    }

    rpc BroadcastMembershipChanges (ClusterMembersRequest) returns (Empty) {

    }
}

service MultiRaftProtocolService {
    rpc Notify (NotificationRequest) returns (Empty) {
    }
}

message ClusterMembersRequest {
    repeated RaftPeerProto members = 1;
    RaftPeerProto client = 2;
}

message NotificationRequest {
    RaftPeerProto client = 1;
    string notification = 2;
}

message Empty {

}

message DistributeMissionRequest {
    RaftPeerProto client = 1;
    string mission = 2;
}

message DisributeMissionResponse {
    RaftPeerProto client = 1;
    int32 response = 2;
}

message RaftPeerProto {
    string raftPeerId = 1;
    string host = 2;
    uint32 port = 3;
}

message AcquireStatusRequest {
    RaftPeerProto client = 1;
    string status = 2;
}

message AcquireStatusResponse {
    RaftPeerProto client = 1;
    double cost = 2;
}

message AppendEntryRequest {
    RaftPeerProto client = 1;
    RaftPeerProto leader = 2;
    repeated LogEntryProto logEntry = 3;

    uint32 term = 4;
    uint32 prevLogIndex = 5;
}

message AppendEntryResponse {
    RaftPeerProto client = 1;
    uint32 term = 2;
}

message LogEntryProto {
    string data = 1;
    string value = 2;
    uint32 term = 3;
    string agentService = 4;
    RaftPeerProto leader = 5;
}

message VoteRequest {
    RaftPeerProto client = 1;
    uint32 term = 2;
}

message VoteResponse {
    RaftPeerProto client = 1;
    RaftPeerProto nominee = 2;
}


